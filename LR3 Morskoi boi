#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <unistd.h>
#include <Windows.h>

const int N = 10;

void set_rand_ships (int map[N][N], int size_ship, int num_ships)
{
int i, x, y;
int dir = 0;
int count_ship=0;
int count_tact=0;

while(count_ship < num_ships)
{
count_tact++;
if (count_tact>1000)
{
break;
}
/*первичная позиция*/
x=rand()%N;
y=rand()%N;

int temp_x = x;
int temp_y = y;

/*генерация направления*/
dir = rand()%4;

bool setting_is_possible = 1;

/*проверка возможности постановки корабля*/
for(i=0;i < size_ship ;i++){
if ((x<0)||(y<0)||(x>=N)||(y>=N))
{
setting_is_possible = 0;
break;
}
if ((map[x][y] == 1)||(map[x][y+1] == 1)||(map[x][y-1] == 1)||(map[x+1][y] == 1)||(map[x+1][y+1] == 1)||(map[x+1][y-1] == 1)||(map[x-1][y] == 1)||(map[x-1][y+1] == 1)||(map[x-1][y-1] == 1)){
setting_is_possible = 0;
break;
}

switch(dir)
{
case 0: x++;
break;
case 1: y++;
break;
case 2: x--;
break;
case 3: y--;
break;
}
}


if (setting_is_possible==1)
{
x = temp_x;
y = temp_y;

for (i=0;i<size_ship ;i++)
{
map[x][y] = 1;
switch(dir)
{
case 0: x++;
break;
case 1: y++;
break;
case 2: x--;
break;
case 3: y--;
break;
}
}
count_ship++;
}
}
}

void map_show (int map[10][10], int mask[10][10])
{

int i, j;
printf(" ");

for (i=0; i<N;i++)
{ /*нумерация столбцов*/
printf("%d ",i);
}
printf("\n");

for (i=0; i<N;i++)
{ /*нумерация строк*/

printf("%d ",i);

for (j=0;j<N;j++)
{
if(mask[j][i]==1)
{
if(map[j][i]==0)
{
printf("- ");
}
else {
printf("%d ", map[j][i]);
}
}
else
{
printf(" ");
}

}
printf("\n");
}
}

int main()
{
while(true){

int map[10][10] = {0};
int mask[10][10] = {0};



set_rand_ships(map, 4 , 1);
set_rand_ships(map, 3 , 2);
set_rand_ships(map, 2 , 3);
set_rand_ships(map, 1 , 4);


int x=0;
int y=0;

while (true)
{
map_show(map, mask);

printf("Enter the coordinates of the goal\n");
scanf("%d", &x );
scanf("%d", &y );

if (map[x][y]==1)
{
printf("Hit\n");
}
else
{
printf("Blunder\n");
}
mask[x][y]=1;

Sleep(1000);
system("cls");




}


getch();
system("cls");
}

system("pause");
return 0;
}
